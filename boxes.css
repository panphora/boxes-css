/*

  boxes.css

  a css framework for making landing pages
  for people who don't like thinking about css

  guiding ideas:
  - landing pages should be simple to make
  - you shouldn't have to think -- just write/design
  - the page should adapt to different screen sizes automatically

  rules
  - aspect ratios of boxes always maintained
  - fewer classes the better
  - fewer concepts the better (i.e. no container/row if possible)

  features
  - differently sized boxes with as few classes as possible
  - navigation row with mobile menu
  - change the background color or text color of boxes and still look good

*/

/* GENERAL CSS RESET */

html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}

body {
  min-height: 100vh;
  font-family: ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;
  line-height: 1.44;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

ul {
  list-style: none;
}

button,
input,
select,
textarea {
  margin: 0;
  font: inherit;
}

img,
picture,
video {
  display: block;
  height: auto;
  max-width: 100%;
}

iframe {
  border: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*

  BUTTON RESET

*/

button {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible
  background: transparent;
  color: inherit;
  font: inherit;
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
}

button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*

  MAIN

*/

/* VARIABLES */
:root {
  --desktop-box-width: 50vw;
  --desktop-box-height: 40vw;
  --desktop-box-max-width: 600px;
  --desktop-box-max-height: 480px;
}

/* 

  breakpoint:

  mobile and default styles 

*/

/* 

  top-level boxes 

  aspect ratio = 5 width : 4 height

*/

body > div, body > div > div {
  overflow: hidden;
  width: calc(var(--desktop-box-width) * 2);
  max-width: calc(var(--desktop-box-max-width) * 1.25);
  margin-left: auto;
  margin-right: auto;
}

/* 
  we don't just default to giving all non-media boxes padding because
  we can have nested boxes and we don't want the parent box to have padding
  in that case
*/
.padding {
  padding: 2rem;
}

/* 
  media boxes always maintain their aspect ratios 
  other boxes don't maintain this aspect ratio on mobile
  and can expand/contract their height based on their content
*/
.media {
  position: relative;
  padding: 0;
}

body > .media, body > div > .media {
  height: calc(var(--desktop-box-height) * 2);
  max-height: calc(var(--desktop-box-max-height) * 1.25);
}

.media img, .media svg, .media video, .media iframe, .media object, .media embed, .media picture, .media canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* 

  breakpoint:

  tablet and desktop devices 

*/
@media (min-width: 600px) {

  /* 
    on tablet, non-media boxes still maintain their width to height aspect ratio 
    they lose this defined height on mobile, where the content of the box is 
    allowed to determine the height of the box
  */
  body > div {
    height: calc(var(--desktop-box-height) * 2);
    max-height: calc(var(--desktop-box-max-height) * 1.25);
  }

  /* 
    
    second-level boxes 

    aspect ratio = 5 width : 4 height

    types:
    - tall
    - wide

  */

  body > div > div, body > div > .media {
    float: left;
    width: 50%;
    height: 50%;
  }

  body > div > .tall, body > div > .tall.media {
    height: 100%;
  }

  body > div > .wide, body > div > .wide.media {
    width: 100%;
  }

}

/* 

  breakpoint:

  desktop devices 

*/
@media (min-width: 1100px) {

  /* 
    cute hack that lets us use the body as a container to center 
    everything inside it 
  */
  body {
    padding-left: calc(50vw - 600px);
    padding-right: calc(50vw - 600px);
  }

  /* 

    top-level boxes 

    aspect ratio = 5 width : 4 height

  */

  body > div, body > .media {
    float: left;
    width: var(--desktop-box-width);
    max-width: var(--desktop-box-max-width);
    height: var(--desktop-box-height);
    max-height: var(--desktop-box-max-height);
  }

}


.yellow {
  background-color: #FBBF24;
}

.blue {
  background-color: #3B82F6;
}

.purple {
  background-color: #8B5CF6;
}

.pink {
  background-color: #EC4899;
}

.green {
  background-color: #10B981;
}

.red {
  background-color: #EF4444;
}

.indigo {
  background-color: #6366F1;
}

