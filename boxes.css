/*

  boxes.css

  a css framework for making landing pages
  for people who don't like thinking about css

  guiding ideas:
  - landing pages should be simple to make
  - you shouldn't have to think -- just write/design
  - the page should adapt to different screen sizes automatically

  rules
  - aspect ratios of boxes always maintained
  - fewer classes the better
  - fewer concepts the better (i.e. no container/row if possible)

  features
  - differently sized boxes with as few classes as possible
  - navigation row with mobile menu
  - change the background color or text color of boxes and still look good

*/

/* GENERAL CSS RESET */

html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}

body {
  min-height: 100vh;
  line-height: 1.44;
  font-size: 18px;
  font-family: ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #111827;
}

html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

ul {
  list-style: none;
}

button,
input,
select,
textarea {
  margin: 0;
  font: inherit;
}

img,
picture,
video {
  display: block;
  height: auto;
  max-width: 100%;
}

iframe {
  border: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*

  BUTTON RESET

*/

button {
  display: inline-block;
  flex: 0 0 auto;
  align-self: flex-start;
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  cursor: pointer;
  background: transparent;
  color: inherit;
  font: inherit;
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
}

button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*

  MAIN

*/

/* VARIABLES */
:root {
  --desktop-box-width: 50vw;
  --desktop-box-height: 40vw;
  --desktop-box-max-width: 600px;
  --desktop-box-max-height: 480px;
}

/* COLORS */

.white {
  color: #fff;
}

.black {
  color: #111827;
}

.green {
  color: #00965a;
}

.blue {
  color: #007dfa;
}

.yellow {
  color: #e67700;
}

.background-green {
  background-color: #00d07d;
}

.background-blue {
  background-color: #0f97fc;
}

.background-yellow {
  background-color: #FBBF24;
}

/* TEXT UTILITIES */

.text-center {
  text-align: center;
}

.font-weight-100, .font-weight-thin {
  font-weight: 100;
}
.font-weight-200, .font-weight-extra-light, .font-weight-ultra-light {
  font-weight: 200;
}
.font-weight-300, .font-weight-light {
  font-weight: 300;
}
.font-weight-400, .font-weight-normal, .font-weight-book, .font-weight-regular {
  font-weight: 400;
}
.font-weight-500, .font-weight-medium {
  font-weight: 500;
}
.font-weight-600, .font-weight-semi-bold, .font-weight-demi-bold {
  font-weight: 600;
}
.font-weight-700, .font-weight-bold {
  font-weight: 700;
}
.font-weight-800, .font-weight-extra-bold, .font-weight-ultra-bold {
  font-weight: 800;
}
.font-weight-900, .font-weight-black, .font-weight-heavy {
  font-weight: 900;
}

/* ALIGNMENT */

.vertical-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* 

  SPACING

*/

/* technique from: https://every-layout.dev/layouts/stack/ */
section *:not(section, .h1, .h2, .h3) + *:not(section, .h1, .h2, .h3, .h4, .h5, .h6) {
  margin-top: 1rem;
}

section .h1 + *:not(section, .h1, .h2, .h3, .h4, .h5, .h6) {
  margin-top: 1.35rem;
}

section .h2 + *:not(section, .h1, .h2, .h3, .h4, .h5, .h6) {
  margin-top: 1.25rem;
}

section .h3 + *:not(section, .h1, .h2, .h3, .h4, .h5, .h6) {
  margin-top: 1.15rem;
}

section *:not(section) + .h1 {
  margin-top: 2px;
}

section *:not(section) + .h2 {
  margin-top: 3px;
}

section *:not(section) + .h3 {
  margin-top: 4px;
}

section *:not(section) + .h4 {
  margin-top: 5px;
}

section *:not(section) + .h5 {
  margin-top: 6px;
}

section *:not(section) + .h6 {
  margin-top: 7px;
}

/* 
  we don't just default to giving all non-media boxes padding because
  we can have nested boxes and we don't want the parent box to have padding
  in that case
*/
.content {
  padding: 1.6rem 2rem; /* 4:5 ratio, same as boxes */
}

/* TYPOGRAPHY */

.h1 {
  font-size: 60px;
  line-height: 1.1;
}

.h2 {
  font-size: 48px;
  line-height: 1.15;
}

.h3 {
  font-size: 36px;
  line-height: 1.2;
}

.h4 {
  font-size: 30px;
  line-height: 1.25;
}

.h5 {
  font-size: 24px;
  line-height: 1.3;
}

.h6 {
  font-size: 21px;
  line-height: 1.4;
}

/* FORMS */

/* default button style */
.button {
  overflow: visible;
  flex: 0 0 auto;
  align-self: flex-start;
  display: inline-block;
  white-space: nowrap;
  margin-right: 11px;
  padding: 17px 2rem 19px;
  font-weight: bold;
  cursor: pointer;
}

:not(section.background-yellow) .button:not(.secondary) {
  color: #fff;
  background: #ed3488;
  background: linear-gradient(12deg, #ed3488 85%, #f37ab1 100%);
  border-radius: 9999px;
  box-shadow: 1px 2px 3px rgba(0,0,0,.2);
  text-shadow: 0 1px 2px rgba(0,0,0,.20);
}

.button:not(.secondary):hover {
  filter: brightness(102%) saturate(104%);
}

/* purple button */
section.background-yellow .button:not(.secondary) {
  color: #fff;
  background: #7c19e6;
  background: linear-gradient(12deg, #7c19e6 85%, #a45eee 100%);
}

section.background-yellow .button:not(.secondary):hover {
  filter: brightness(105%) saturate(107%);
}

/* orange button */
section.background-blue .button:not(.secondary) {
  color: #fff;
  background: #f07602;
  background: linear-gradient(12deg, #f07602 85%, #fdaa5b 100%);
}

section.background-blue .button:not(.secondary):hover {
  filter: brightness(102%) saturate(104%);
}

/* blue button */
section.background-green .button:not(.secondary) {
  color: #fff;
  background: #4429d4;
  background: linear-gradient(12deg, #4429d4 85%, #745fde 100%);
}

section.background-green .button:not(.secondary):hover {
  filter: brightness(105%) saturate(107%);
}

/* secondary button */
.button.secondary {
  color: #273345;
  text-decoration: underline;
  text-decoration-color: rgba(0,0,0,.4);
  border-radius: 9999px;
  background: rgba(255,255,255,.16);
  box-shadow: 1px 2px 3px rgba(0,0,0,.08);
  text-shadow: none;
}

section:not(.background-yellow):not(.background-green):not(.background-blue) .button.secondary {
  box-shadow: 1px 1px 4px rgba(0,0,0,.16);
}

.button.secondary:hover {
  color: #111827;
  background: rgba(255,255,255,.25);
}

section:not(.background-yellow):not(.background-green):not(.background-blue) .button.secondary:hover {
  color: #111827;
  background: #F9FAFB;
}


/* text & email inputs */
input:not([type]), input[type="text"], input[type="email"] {
  display: block;
  width: 100%;
  padding: 14px 16px 15px;
  border: 1px solid rgba(20, 20, 20, .75);
  border-radius: 3px;
}

/* floating label technique from: https://csslayout.io/floating-label/ */
.floating-label-container {
  position: relative;
}

.floating-label-container input:not([type]):not(:placeholder-shown), .floating-label-container input[type="text"]:not(:placeholder-shown), .floating-label-container input[type="email"]:not(:placeholder-shown) {
  padding: 22px 16px 7px;
}

.floating-label-container input:not([type]):not(:placeholder-shown) + label, .floating-label-container input[type="text"]:not(:placeholder-shown) + label, .floating-label-container input[type="email"]:not(:placeholder-shown) + label {
  pointer-events: none;
  opacity: .75;
  transform: translate(0, -50%);
  font-size: 14px;
}

.floating-label-container input:not([type]):not(:placeholder-shown) + label::after, .floating-label-container input[type="text"]:not(:placeholder-shown) + label::after, .floating-label-container input[type="email"]:not(:placeholder-shown) + label::after {
  content: ":";
}

.floating-label-container label {
  position: absolute;
  left: 17px;
  top: 0;
  opacity: 0;
  transition: transform 200ms;
}

/*

  breakpoint:

  mobile and default styles 

*/

/* 

  top-level boxes 

  aspect ratio = 5 width : 4 height

*/

body > section, body > section > section {
  overflow: hidden;
  /*
    all boxes on mobile are 100% width

    need to use % instead of vw because scrollbars in MS Edge take up width 
    but aren't included in vw 
  */
  width: 100%;
  /* 
    for tablet viewport: let the boxes expand a little and not leave 
    so much whitespace on the left/right sides of the screen

    it won't expand larger than 100% width on mobile, so no worries
  */
  max-width: calc(var(--desktop-box-max-width) * 1.25);

  /*
    for tablet viewport: center all top-level boxes in the middle of the screen
  */
  margin-left: auto;
  margin-right: auto;
}

/* 
  MEDIA BOXES

  media boxes always maintain their aspect ratios, even on mobile
  other boxes don't maintain this aspect ratio on mobile
*/
.media {
  position: relative;
  padding: 0;
}

/* 
  on mobile, top-level media boxes and second-level media boxes
  become the same size â€” full-width & full-height (5:4)

  how they maintain their aspect ratio: on mobile, the width is always 100% 
  (i.e. pretty much 100vw except on MS Edge where there's a slight difference) 
  and the height is always 40vw * 2 = 80vw, so the aspect ration of 5:4
  is preserved with 100vw:80vw

  and on tablet, where the top-level boxes are allowed to expand to max-width
  (600px) * 1.25 and max-height (480px) * 1.25, the aspect ratio is preserved
  there as well -- just 125% larger than on desktop/mobile
*/
body > .media, body > section > .media {
  height: calc(var(--desktop-box-height) * 2);
  max-height: calc(var(--desktop-box-max-height) * 1.25);
}

.media img, .media svg, .media video, .media iframe, .media object, .media embed, .media picture, .media canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* 

  breakpoint:

  tablet and desktop devices 

*/
@media (min-width: 600px) {

  /* 
    on tablet, top-level non-content boxes (just like media boxes) maintain 
    their aspect ratio, primarily so they're able to contain child boxes that 
    also maintain their aspect ratio

    on tablet, top-level content boxes lose their aspect ratio so they can
    expand/contract as necessary

    they lose this aspect ratio on mobile, where the content of the box is 
    allowed to determine the height of the box

    (note: we exclude media boxes here because the same styles are already
      defined for media boxes on mobile, so it's unnecessary)
  */
  body > section:not(.content):not(.media) {
    height: calc(var(--desktop-box-height) * 2);
    max-height: calc(var(--desktop-box-max-height) * 1.25);
  }

  /* 
    
    second-level / nested boxes 

    these are always inside a non-media, non-content box and expand to fill
    some percentage of their container

    on mobile, they're allowed to lose their aspect ratio and just fill up
    as much as their content needs

    aspect ratio = 5 width : 4 height

    types:
    - tall
    - wide

  */

  body > section > section, body > section > .media {
    float: left;
    width: 50%;
    height: 50%;
  }

  body > section > .tall, body > section > .tall.media {
    height: 100%;
  }

  body > section > .wide, body > section > .wide.media {
    width: 100%;
  }

}

/* 

  breakpoint:

  small desktop devices (1100px - 1199.9999px)

  difficult spot because it's the only place where a boxes with text in them
  shrink AND can't expand vertically (like they can on mobile)

*/

@media (min-width: 1100px) and (max-width: 1199.999px) {

  .h1 {
    font-size: 54px;
    line-height: 1.1;
  }

  .h2 {
    font-size: 42px;
    line-height: 1.15;
  }

  .h3 {
    font-size: 32px;
    line-height: 1.2;
  }

  .h4 {
    font-size: 26px;
    line-height: 1.25;
  }

  .h5 {
    font-size: 21px;
    line-height: 1.3;
  }

  .h6 {
    font-size: 18px;
    line-height: 1.4;
  }

}

/* 

  breakpoint:

  desktop devices 

*/
@media (min-width: 1100px) {

  /* 
    cute hack that lets us use the body as a container to center 
    everything inside it 
  */
  body {
    padding-left: calc(50vw - 600px);
    padding-right: calc(50vw - 600px);
  }

  /* 

    top-level boxes 

    every type of top-level box (i.e. section) should maintain its
    aspect ration on desktop devices

    on tablet and mobile, only .media boxes should maintain their
    aspect ratios

    aspect ratio = 5 width : 4 height

  */

  body > section:not(.content), body > section.content, body > section.media {
    float: left;
    /* 
      using % width instead of vw because scrollbars in MS Edge take up 
      width but aren't included in the vw units, which makes each top-level
      box half a scrollbar width too wide
    */
    width: 50%;
    max-width: var(--desktop-box-max-width);
    height: var(--desktop-box-height);
    max-height: var(--desktop-box-max-height);
  }

  body > section.wide {
    width: 100%;
    max-width: calc(var(--desktop-box-max-width) * 2);
  }

  body > section.tall {
    height: calc(var(--desktop-box-height) * 2);
    max-height: calc(var(--desktop-box-max-height) * 2);
  }

}






